@inherits LayoutComponentBase
@using Telerik.DataSource
@using Telerik.DataSource.Extensions
@using Telerik.FontIcons;
@using Telerik.SvgIcons;

<TelerikRootComponent>
    <div class="header">
        <div class="nav-container" style="margin-right: 2em;">
            <div class="menu-button">
                <TelerikButton Icon="@SvgIcon.Menu" OnClick="ToggleMenuDrawer"></TelerikButton>
            </div>
            <img style="width: 32px;" src="images/fimsinspect.svg">
            <div class="title">
                <h1>@($"{Constants.FimsCpkTitle} ({Constants.FimsCpkVersion})")</h1>
            </div>
            @{
                if (!WindowWidthSmall)
                {
                    <DigitalClock></DigitalClock>
                }
            }
        </div>
    </div>

    <TelerikDrawer @ref="FimsCpkDrawer"
                   Data="@FimsCpkDrawerItems"
                   Expanded="@DrawerExpanded"
                   ExpandedChanged="((bool newValue) => ExpandedChangedHandler(newValue))"
                   Width="160px" Mode="DrawerMode.Push" Position="DrawerPosition.Start" MiniMode="true">
        <DrawerContent>
            @Body
        </DrawerContent>
    </TelerikDrawer>

</TelerikRootComponent>

@code {
    bool DrawerExpanded { get; set; }
    bool WindowWidthSmall { get; set; }

    TelerikDrawer<DrawerItem> FimsCpkDrawer { get; set; }
    public IEnumerable<DrawerItem> FimsCpkDrawerItems { get; set; }


    List<DrawerItem> CpkPages { get; set; } = new List<DrawerItem>
    {
        new DrawerItem { Text = "Home", Url = "/", Icon =SvgIcon.Home },
        new DrawerItem { Separator = true },
        new DrawerItem { Text = "CPK 관리", Url = "/cpk", Icon = SvgIcon.Search },
        new DrawerItem { Separator = true },
        new DrawerItem { Text = "검사리스트", Url = "/sheets", Icon = SvgIcon.Grid },
        new DrawerItem { Text = "검사 결과", Url = "/sndata", Icon = SvgIcon.Data },
        new DrawerItem { Separator = true },
        new DrawerItem { Text = "검사 스펙", Url = "/modelspec", Icon = SvgIcon.Sparkles },
        new DrawerItem { Separator = true },
        new DrawerItem { Text = "관리자", Url = "/adminpage", Icon = SvgIcon.Eyedropper },
        new DrawerItem { Separator = true }
    };

    public class DrawerItem
    {
        public string Text { get; set; }
        public ISvgIcon Icon { get; set; }
        public string Url { get; set; }
        public bool Separator { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
        DrawerExpanded = true;
    }

    protected override async Task OnParametersSetAsync()
    {
        FimsCpkDrawerItems = CpkPages;
        if (FimsCpkDrawer != null)
            await FimsCpkDrawer.ExpandAsync();
        StateHasChanged();
    }

    async Task ExpandedChangedHandler(bool value)
    {
        DrawerExpanded = value;
    }

    async Task ToggleMenuDrawer()
    {
        if (DrawerExpanded)
        {
            await FimsCpkDrawer.CollapseAsync();
        }
        else
        {
            await FimsCpkDrawer.ExpandAsync();
        }
    }
}

